{"ast":null,"code":"var _jsxFileName = \"D:\\\\UpWork\\\\AI_Inga\\\\CPS\\\\CPS_FormSubmitterAutomation\\\\Gemini\\\\frontend\\\\src\\\\components\\\\PasswordResetForm.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/components/PasswordResetForm.jsx\nimport React, { useState } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordResetForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    password: '',\n    new_password: '',\n    confirm_password: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(null);\n  const [error, setError] = useState(null);\n  const handleChange = e => setFormData({\n    ...formData,\n    [e.target.name]: e.target.value\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n    try {\n      const res = await api.post('/auth/update-password', formData);\n      setSuccess(res.data.message);\n      setFormData({\n        password: '',\n        new_password: '',\n        confirm_password: ''\n      });\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Error updating password');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"space-y-4 bg-white p-6 rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Change Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Current Password\",\n      value: formData.password,\n      onChange: handleChange,\n      className: \"w-full border p-2 rounded\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"new_password\",\n      placeholder: \"New Password\",\n      value: formData.new_password,\n      onChange: handleChange,\n      className: \"w-full border p-2 rounded\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"confirm_password\",\n      placeholder: \"Confirm New Password\",\n      value: formData.confirm_password,\n      onChange: handleChange,\n      className: \"w-full border p-2 rounded\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-green-600\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-600\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      className: \"w-full bg-indigo-600 text-white py-2 px-4 rounded hover:bg-indigo-700\",\n      children: loading ? 'Updating...' : 'Update Password'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordResetForm, \"yA36djY8c6htHDBWrytawP3Bu5Q=\");\n_c = PasswordResetForm;\nexport default PasswordResetForm;\nvar _c;\n$RefreshReg$(_c, \"PasswordResetForm\");","map":{"version":3,"names":["React","useState","api","jsxDEV","_jsxDEV","PasswordResetForm","_s","formData","setFormData","password","new_password","confirm_password","loading","setLoading","success","setSuccess","error","setError","handleChange","e","target","name","value","handleSubmit","preventDefault","res","post","data","message","err","_err$response","_err$response$data","response","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","disabled","_c","$RefreshReg$"],"sources":["D:/UpWork/AI_Inga/CPS/CPS_FormSubmitterAutomation/Gemini/frontend/src/components/PasswordResetForm.jsx"],"sourcesContent":["// frontend/src/components/PasswordResetForm.jsx\r\nimport React, { useState } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst PasswordResetForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    password: '',\r\n    new_password: '',\r\n    confirm_password: '',\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n    setSuccess(null);\r\n    try {\r\n      const res = await api.post('/auth/update-password', formData);\r\n      setSuccess(res.data.message);\r\n      setFormData({ password: '', new_password: '', confirm_password: '' });\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Error updating password');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-4 bg-white p-6 rounded shadow\">\r\n      <h2 className=\"text-xl font-semibold mb-4\">Change Password</h2>\r\n\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Current Password\"\r\n        value={formData.password}\r\n        onChange={handleChange}\r\n        className=\"w-full border p-2 rounded\"\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        name=\"new_password\"\r\n        placeholder=\"New Password\"\r\n        value={formData.new_password}\r\n        onChange={handleChange}\r\n        className=\"w-full border p-2 rounded\"\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        name=\"confirm_password\"\r\n        placeholder=\"Confirm New Password\"\r\n        value={formData.confirm_password}\r\n        onChange={handleChange}\r\n        className=\"w-full border p-2 rounded\"\r\n        required\r\n      />\r\n\r\n      {success && <p className=\"text-green-600\">{success}</p>}\r\n      {error && <p className=\"text-red-600\">{error}</p>}\r\n\r\n      <button\r\n        type=\"submit\"\r\n        disabled={loading}\r\n        className=\"w-full bg-indigo-600 text-white py-2 px-4 rounded hover:bg-indigo-700\"\r\n      >\r\n        {loading ? 'Updating...' : 'Update Password'}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PasswordResetForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}